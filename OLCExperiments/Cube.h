#pragma once
#include "Mesh.h"

class Game::Cube : public Game::Mesh
{
public:
	Cube()
	{
		/*tris = {
		   {	-1.0f,	1.0f,	1.0f,		1.0f,	-1.0f,	1.0f,		-1.0f,	-1.0f,	1.0f	},
		   {	-1.0f,	1.0f,	1.0f,		1.0f,	1.0f,	1.0f,		1.0f,	-1.0f,	1.0f	},

		   {	-1.0f,	-1.0f,	-1.0f,		1.0f,	-1.0f,	-1.0f,		1.0f,	1.0f,	-1.0f	},
		   {	1.0f,	1.0f,	-1.0f,		-1.0f,	1.0f,	-1.0f,		-1.0f,	-1.0f,	-1.0f	},

		   {	-1.0f,	1.0f,	-1.0f,		-1.0f,	-1.0f,	1.0f,		-1.0f,	-1.0f,	-1.0f	},
		   {	-1.0f,	1.0f,	-1.0f,		-1.0f,	1.0f,	1.0f,		-1.0f,	-1.0f,	1.0f	},

		   {	1.0f,	1.0f,	1.0f,		1.0f,	-1.0f,	-1.0f,		1.0f,	-1.0f,	1.0f	},
		   {	1.0f,	1.0f,	1.0f,		1.0f,	1.0f,	-1.0f,		1.0f,	-1.0f,	-1.0f	},
		};*/
		indexed = true;
		indVerts = {
			{	-1.0f,	1.0f,	1.0f	},
			{	1.0f,	1.0f,	1.0f	},
			{	1.0f,	-1.0f,	1.0f	},
			{	-1.0f,	-1.0f,	1.0f	},
			{	-1.0f,	1.0f,	-1.0f	},
			{	1.0f,	1.0f,	-1.0f	},
			{	1.0f,	-1.0f,	-1.0f	},
			{	-1.0f,	-1.0f,	-1.0f	}
		};
		indTri = {
			{0,2,3,olc::RED},
			{0,1,2,olc::RED},

			{7,6,5,olc::BLUE},
			{5,4,7,olc::BLUE},

			{4,3,7,olc::GREEN},
			{4,0,3,olc::GREEN},

			{1,6,2,olc::YELLOW},
			{1,5,6,olc::YELLOW}
		};
		translation = { 0.0f,0.0f,5.0f };
	}
};